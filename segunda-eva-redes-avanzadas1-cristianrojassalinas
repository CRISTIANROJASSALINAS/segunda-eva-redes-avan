#tratare de documentar todo
#bueno primeramente tuve que instalar requestes en el terminal, json lo tenia

import requests
import json
#aqui lo que hago es ir a buscar datos al sitio web, donde me logie y me dieron una key que es la esta abajo, es personal.
def obtener_coordenadas(ciudad):
    url = "http://www.mapquestapi.com/geocoding/v1/address"
    params = {
        "key": "Xpwv0ZOjv8oHQZ9TH8x3GXBWvKnL3kAg",
        "location": ciudad,
        "maxResults": 1,
        "thumbMaps": False
    }
    response = requests.get(url, params=params)
    data = response.json()
    lat = data["results"][0]["locations"][0]["latLng"]["lat"]
    lng = data["results"][0]["locations"][0]["latLng"]["lng"]
    return lat, lng
#en este paso lo que se hace es buscar calcular la distancia entre puntos, origen y destino, route-> from to
#repito la key logicamente por que otra vez le pido informacion a la pagina
def calcular_distancia(origen, destino):
    url = "http://www.mapquestapi.com/directions/v2/route"
    params = {
        "key": "Xpwv0ZOjv8oHQZ9TH8x3GXBWvKnL3kAg",
        "from": origen,
        "to": destino,
        "unit": "k"
    }
    response = requests.get(url, params=params)
    data = response.json()
    distance = data["route"]["distance"]
    return distance
#aqui se conviente el tiempo, para dar como resultado final horas minutos segundos.
def convertir_tiempo(segundos):
    horas = segundos // 3600
    minutos = (segundos % 3600) // 60
    segundos = segundos % 60
    return horas, minutos, segundos
#aqui hago que pregunte la ciudad de origen y la cuidad de destino
#tambien creo una variable que dicta que si ingreso s se caiga el programa
while True:
    origen = input("Insertar ciudad de origen: ")
    if origen.lower() == "s":
        break
    destino = input("Insertar ciudad de destino: ")
    if destino.lower() == "s":
        break

    if obtener_coordenadas(origen) and obtener_coordenadas(destino):
        break
    else:
        print("Intente de nuevo ingresando ciudades válidas.")

if origen.lower() != "s" and destino.lower() != "s":
    distancia = calcular_distancia(origen, destino)

    duracion_segundos = distancia / 100 * 3600

    horas, minutos, segundos = convertir_tiempo(duracion_segundos)
#aqui hago que responda al distancia del trayecto en km
#tambien que responda la duracion del trayecto en horas minutos y segundos
    print("Distancia entre puntos:", round(distancia, 1), "km")
    print("Duración del trayecto:", round(horas,), "horas,", round(minutos,), "minutos,", round(segundos,), "segundos")
#finalmente que muestre resultados
    resultados = {
        "Distancia entre puntos": round(distancia, 1),
        "Duración del trayecto": f"{round(horas,)} horas, {round(minutos,)} minutos, {round(segundos,)} segundos"
    }


----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
--------------------->>>>>>>>>>     LEA ABAJO     --------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
#ESTE ES UN CODIGO DISTINTO PERO BASICAMENTE HACE LO MISMO, EVALUE USTED EL QUE GUSTE MAS;

#PROFE!!!**** MUY IMPORTANTE PARA EJECUTAR MI CODIGO DEBE INSTALAR lA BIBLIOTECA GEOPY CON EL SIGUIENTE COMANDO:
#-------->>>>>>>>     pip install geopy
#la ciudad de origen y destino la ingresa usted


from geopy.geocoders import Nominatim
from geopy import distance
from datetime import timedelta
import sys

#abajo lo que hago es obtener una ruta
def obtener_ruta(ciudad1, ciudad2):
    geolocator = Nominatim(user_agent="my_app")
    location1 = geolocator.geocode(ciudad1)
    location2 = geolocator.geocode(ciudad2)
    coordenadas1 = (location1.latitude, location1.longitude)
    coordenadas2 = (location2.latitude, location2.longitude)

    distancia_km = round(distance.distance(coordenadas1, coordenadas2).kilometers, 1)

    velocidad_promedio_km_h = 80  # puse una velocidad promedio de 60kmh
    tiempo_horas = distancia_km / velocidad_promedio_km_h

    duracion = timedelta(hours=tiempo_horas)
    duracion_formateada = str(duracion)
#lo que hago aqui es basicamente preguntar la cuidad de origen y la cuidad de destino
#hace una narratiba breve del recorrido
#dice la distancia total de un punto a otro en kilometros
    ruta = f"Para llegar desde {ciudad1} a tu destino {ciudad2}, sigue la siguiente ruta:"
    ruta += f"\n1. Parte de {ciudad1}."
    ruta += f"\n2. Sigue por la carretera principal hacia el este durante {duracion_formateada}."
    ruta += f"\n3. Llegarás finalmente a tu destino, {ciudad2}."
    ruta += f"\n\nLa distancia total de un punto a otro es de {distancia_km} kilómetros."

    print(ruta)

# en este input lo que hago en pedirle la ciudad de origen y la ciudad de destino
ciudad1 = input("Ingrese la ciudad de origen: ")
ciudad2 = input("Ingrese la ciudad de destino: ")

# lo que hago aqui es que si ingreso s o salida se cierre el terminal, tras muchas pruebas solo me funciona en salida
if ciudad1.lower() == "s" or ciudad1.lower() == "salida":
    sys.exit("Has decidido salir del programa.")

if ciudad2.lower() == "s" or ciudad2.lower() == "salida":
    sys.exit("Has decidido salir del programa.")

obtener_ruta(ciudad1, ciudad2)

